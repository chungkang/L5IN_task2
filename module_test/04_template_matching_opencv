import cv2
import numpy as np

# Load the main image and the template image
main_image = cv2.imread('module_test\\result\\20220112_162250_wrapped_crop.png')
template_image = cv2.imread('module_test\\result\\template_3.png')

# Define a range of rotation angles
angles = np.arange(0,360, 15)

# Initialize variables to keep track of the best match
max_corr = 0.6
best_match_loc = None

# Loop over all rotation angles
for angle in angles:

    # Rotate the template image by the current angle
    rows, cols = template_image.shape[:2]
    M = cv2.getRotationMatrix2D((cols/2,rows/2), angle, 1)
    rotated_template = cv2.warpAffine(template_image, M, (cols,rows))

    # Perform template matching between the main image and the rotated template image
    result = cv2.matchTemplate(main_image, rotated_template, cv2.TM_CCOEFF_NORMED)

    # Find the location of the maximum correlation value in the result
    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)

    # Check if this is the best match so far
    if max_val > max_corr:
        max_corr = max_val
        best_match_loc = max_loc
        best_match_angle = angle

# Draw a rectangle around the best match in the main image
w, h = template_image.shape[:-1]
top_left = best_match_loc
bottom_right = (top_left[0] + w, top_left[1] + h)
cv2.rectangle(main_image, top_left, bottom_right, (0, 0, 255), 2)

# Display the result
cv2.imshow('Matching Result', main_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
