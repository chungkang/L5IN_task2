import cv2

target = cv2.imread("module_test\\result\\20220112_162250_wrapped_crop.png", cv2.IMREAD_GRAYSCALE)

# Load the template and target images
template_list = ["template_1.png","template_2.png","template_3.png"]

for template_name in template_list:
    template = cv2.imread("module_test\\result\\" + template_name, cv2.IMREAD_GRAYSCALE)

    # Define the rotation angle and scale factor
    angle_range = [0,15,30,45,60,75,90,105,120,135,150,165,180]

    for angle in angle_range:
        # angle = 0
        scale_range = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5]
        for scale in scale_range:
            # scale = 1.0
            # Create a rotated copy of the template image
            center = (template.shape[1] // 2, template.shape[0] // 2)
            M = cv2.getRotationMatrix2D(center, angle, scale)
            rotated_template = cv2.warpAffine(template, M, template.shape[::-1])

            # Perform template matching with the rotated template
            result = cv2.matchTemplate(target, rotated_template, cv2.TM_CCOEFF_NORMED)
            # result = cv2.matchTemplate(target, rotated_template, cv2.TM_CCORR_NORMED)


            # result = cv2.matchTemplate(target, rotated_template, cv2.TM_CCOEFF)
            # result = cv2.matchTemplate(target, rotated_template, cv2.TM_CCORR)
            # result = cv2.matchTemplate(target, rotated_template, cv2.TM_SQDIFF)
            # result = cv2.matchTemplate(target, rotated_template, cv2.TM_SQDIFF_NORMED)

            # Locate the position of the best match in the target image
            min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)
            top_left = max_loc

            # Draw a rectangle around the best match in the target image
            bottom_right = (top_left[0] + rotated_template.shape[1], top_left[1] + rotated_template.shape[0])
            cv2.rectangle(target, top_left, bottom_right, (0, 255, 0), 2)

# Display the resulting image with the best match highlighted
cv2.imshow('Result', target)
cv2.waitKey(0)
cv2.destroyAllWindows()